@model GreenPro.Data.AspNetUser

@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-12">
            <h4>Update Your Profile</h4><br />
            @Html.Raw(@ViewBag.Message)<br />
        </div>
        <div class="col-md-6">
            <div class="form-horizontal">


                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.SecurityStamp)
                @Html.HiddenFor(model => model.PasswordHash)
                @Html.HiddenFor(model => model.EmailConfirmed)
                @Html.HiddenFor(model => model.Email)







                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-3 " })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.DateofBirth, new { @class = "col-md-3 control-label" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(m => m.DateofBirth, new { @class = "form-control", id = "datetimepicker1" })
                        @Html.ValidationMessageFor(m => m.DateofBirth)

                    </div><div class="col-md-4 control-label" style="text-align:left!important">Format: MM/DD/YYYY</div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(m => m.Address, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.State, new { @class = "col-md-3 control-label" })
                    <div class="col-md-5">
                        @Html.DropDownList("StateId", null, htmlAttributes: new { @class = "form-control" })
                        @*@Html.DropDownListFor(model => model.StateId, Model.StateList, new { @class = "form-control" })*@
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.City, new { @class = "col-md-3 control-label" })
                    <div class="col-md-5">
                        @Html.DropDownList("CityId", null, htmlAttributes: new { @class = "form-control" })
                        @*@Html.DropDownListFor(model => model.CityId, Model.CityList, new { @class = "form-control" })*@
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Pincode, new { @class = "col-md-3 control-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.Pincode, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Pincode)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-3 col-md-8">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>

    </div>
}
<script type="text/javascript">
    $(function () {
        $('#datetimepicker1').datetimepicker({
            format: 'MM/DD/YYYY',
            defaultDate: "01/1/1960"
        });
    });
</script>
<script>
    $(document).ready(function () {
        $("#CityId").prop("readonly", true);
        $("#StateId").change(function () {
            $("#CityId").empty();
            var sid = $("#StateId").val();
            if (sid == "-1")
                $("#CityId").prop("readonly", true);
            else
                $("#CityId").prop("readonly", false);
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Citylist")',
                dataType: 'json',
                data: { id: sid },
                success: function (selectListItemList) {
                    $.each(selectListItemList, function (i, state) {
                        $("#CityId").append('<option value="'
                         + state.Value + '">'
                         + state.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })
    });
</script>