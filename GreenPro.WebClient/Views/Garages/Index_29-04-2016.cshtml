@model PagedList.IPagedList<GreenPro.Data.Garage>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />



@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="clearfix"></div>

<style>
    .infoDiv {       
        -webkit-user-select: none;
        background-color: white;
    }

        .infoDiv p {
            font-size: 12px;
        }

        .infoDiv h4 {
            font-size: 14px;
        }

    #map_canvas img {
        max-width: none;
    }

    .fa:before {
        line-height: 10px;
    }

    .garage-title {
        color: green;
        font-weight: 600;
    }
</style>
@*<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA3CNMI-_JAV9-dWIctroZQTuUwjZygT3A"></script>*@

<script src="http://maps.google.com/maps/api/js?sensor=true" type="text/javascript"></script>


<script>

    function OnFailure(data) {
        alert("Unable to peform request. Please try again later ");
    }
</script>

    <div class="row ">

        <div class="col-md-12 panel panel-default">
            @using (Ajax.BeginForm("Index", "Garages",
            new AjaxOptions
            {
                HttpMethod = "get",
                InsertionMode = InsertionMode.Replace,
                LoadingElementId = "loading",
                LoadingElementDuration = 10,
                UpdateTargetId = "garageList",
                OnSuccess = "OnSuccess",
                OnFailure = "OnFailure"
            }))
            {


                <div class="form-group ">
                   
                    <div class="">
                        <div class="">
                            <h4 class="control-label panel-heading">Garage Locator</h4>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="panel-body">
                        <div class="col-md-3">
                            City
                        </div>
                        <div class="col-md-9">
                            @Html.DropDownList("state", (IEnumerable<SelectListItem>)ViewBag.AvailableCitys, "-Select-", htmlAttributes: new { @class = "form-control" })
                        </div>
                        <div class="clearfix"></div>
                        </div>
                    <div class="panel-body">
                        <div class="col-md-3">
                            Garage 
                        </div>
                        <div class="col-md-9">
                            @Html.DropDownList("GarageId", (IEnumerable<SelectListItem>)ViewBag.AvailableGarages, "-Select-", htmlAttributes: new { @class = "form-control" })
                            <span id="states-loading-progress" style="display: none;" class="please-wait">Loading...</span>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                    <div class="panel-body" style="display:none;">
                        <div class="col-md-3">
                            Address
                        </div>
                        <div class="col-md-9">
                            <input type="text" id="searchText" name="searchText" value="@ViewBag.SearchTextData" class="form-control" />
                        </div>
                        <div class="clearfix"></div>
                    </div>
                        <div class="col-md-3">

                        </div>
                        <div class="col-md-9">
                            @*<button class="btn btn-xs btn-primary" id="submit" type="submit">Search</button>*@
                            <input type="submit" id="submit" value="Search" class="line-btn light" />
                        </div>
                        <div class="clearfix"></div>
                    </div>
            }
            
            
            @*Load Garages from ajax*@
            <p id="loading" style="display:none;text-align:center">
                <img src="~/Content/images/loading.gif" />
            </p>
            <div id="garageList">

                @Html.Partial("_SearchAddress", Model)

            </div>



        </div>
        <div class="col-md-12">

            <div class="map-container" id="map_canvas" style="height:300px;">

            </div>
        </div>
    </div>



@section scripts{
<script>
    $(document).ready(function () {


        $("#state").change(function () {
            var selectedItem = $(this).val();
            var ddlStates = $("#GarageId");
            var statesProgress = $("#states-loading-progress");
            statesProgress.show();
            $.ajax({
                cache: false,
                type: "GET",
                url: "/Garages/LoadGarageByCityId",
                data: { "cityId": selectedItem },
            success: function (data) {
                ddlStates.html('');
                $.each(data, function (id, option) {
                    ddlStates.append($('<option></option>').val(option.GarageId).html(option.Garage_Name));
                });
                statesProgress.hide();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve garages.');
                statesProgress.hide();
            }
        });
        });


        // http://www.bootply.com/89084

        $('.collapse').on('shown.bs.collapse', function () {
            $(this).parent().find(".glyphicon-plus").removeClass("glyphicon-plus").addClass("glyphicon-minus");
        }).on('hidden.bs.collapse', function () {
            $(this).parent().find(".glyphicon-minus").removeClass("glyphicon-minus").addClass("glyphicon-plus");
        });



        Initialize("");
        $.ajax({ method: "get", url: "/Garages/Index", data: { searchText: $("#searchText").val(), state: $("#state").val(), GarageId: $("#GarageId").val() }, dataType: "html" }).done(function (data) {
            $('#garageList').html(data);
        });
    });


    function OnSuccess() {
       
        Initialize("");
    }



    function Initialize(searchText) {

        // Google has tweaked their interface somewhat - this tells the api to use that new UI

        // This shows adding a simple pin "marker" - this happens to be the Tate Gallery in Liverpool!


        var url = "";
        var markers = new Array();
        $.getJSON("Garages/GetJsonData?searchText=" + +$("#searchText").val() + "&state=" + $("#state").val()+"&GarageId="+$("#GarageId").val(), null, garageLoaded)

        function garageLoaded(data) {
            loadMarkers(data);
        }
        // console.log(json);

        function loadMarkers(json) {
            if (json.length == 0) {

                return;
            }
            google.maps.visualRefresh = true;
            var Liverpool = new google.maps.LatLng(32.2680738, -110.9923904);

            // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
            var mapOptions = {
                zoom: 2,
                center: Liverpool,
                mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
            };

            // This makes the div with id "map_canvas" a google map
            var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);


            console.log(json);
            // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
            $.each(json, function (i, item) {
                var marker = new google.maps.Marker({
                    'position': new google.maps.LatLng(item.Latitute, item.Longitude),
                    'map': map,
                    'title': item.Garage_Name,
                    'animation': google.maps.Animation.DROP
                });
                markers.push(marker);
                // Make the marker-pin blue!
                marker.setIcon('http://maps.google.com/mapfiles/ms/icons/green-dot.png')
                //<a href='/Packages/" + item.GarageId + "'><button class='btn btn-xs btn-primary'>Packages</button></a>
                // put in some information about each json object - in this case, the opening hours.
                var infowindow = new google.maps.InfoWindow({
                    content: "<div class='infoDiv'><h4>" + item.Garage_Name + "</h4>" + "<div>" + item.Garage_Address + "</div></div>"
                });
                infowindow.setContent(infowindow.getContent());

                // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
                google.maps.event.addListener(marker, 'click', function () {
                    infowindow.open(map, marker);

                });


            });
            function autoCenter() {
                //  Create a new viewpoint bound
                var bounds = new google.maps.LatLngBounds();
                //  Go through each...
                for (var i = 0; i < markers.length; i++) {
                    bounds.extend(markers[i].position);
                }
                //  Fit these bounds to the map
                map.fitBounds(bounds);
            }
            autoCenter();
        }




    }


    //http://chrisltd.com/blog/2013/08/google-map-random-color-pins/
</script>

    }
